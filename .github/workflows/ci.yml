name: CI

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main
    tags:
      - "v*" # Only run on tags that start with 'v' (e.g., v9.5.0)

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  FORCE_COLOR: 3

jobs:
  pre-commit:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v6
        with:
          python-version: "3.x"
      - uses: pre-commit/action@v3.0.1
        with:
          extra_args: --hook-stage manual --all-files
      - name: Run PyLint
        run: |
          echo "::add-matcher::$GITHUB_WORKSPACE/.github/matchers/pylint.json"
          pipx run nox -s pylint

  checks:
    name: Check Python ${{ matrix.python-version }} on ${{ matrix.runs-on }}
    runs-on: ${{ matrix.runs-on }}
    needs: [pre-commit]
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]
        runs-on: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: macos-14
            arch: "arm64"

    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Fetch tags from fork if PR is from a fork
        if:
          ${{ github.event_name == 'pull_request' &&
          github.event.pull_request.head.repo.full_name != github.repository }}
        run: |
          git remote add fork https://github.com/${{ github.event.pull_request.head.repo.full_name }}.git
          git fetch fork --tags

      - uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}
          allow-prereleases: true

      - name: Install OpenGL libraries
        if: ${{ matrix.runs-on == 'ubuntu-latest' }}
        run: sudo apt-get install --fix-missing libgl-dev

      - name: Install package
        run: python -m pip install .[test]

      - name: Test package
        run: >-
          python -m pytest -ra --cov --cov-report=xml --cov-report=term
          --durations=20

      - name: Upload coverage report
        uses: codecov/codecov-action@v5.5.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  build_wheels:
    name: >
      Build Python Wheel on ${{ matrix.runs-on }} (${{matrix.arch }})
    runs-on: ${{ matrix.runs-on }}
    needs: [pre-commit]
    strategy:
      fail-fast: false
      matrix:
        runs-on: [ubuntu-latest, windows-latest, macos-15-intel]
        arch: ["auto"]

        include:
          - runs-on: macos-14
            arch: "arm64"

    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - uses: pypa/cibuildwheel@v3.2
        env:
          CIBW_BUILD: "cp310-* cp311-* cp312-* cp313-*"
          CIBW_ARCHS: "${{ matrix.arch }}"
          CIBW_REPAIR_WHEEL_COMMAND: ""

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.runs-on }}-${{ strategy.job-index }}
          path: wheelhouse/*.whl

  pass: # This job does nothing and is only used for the branch protection
    if: always()
    needs:
      - pre-commit
      - checks
      - build_wheels

    runs-on: ubuntu-latest

    steps:
      - name: Decide whether the needed jobs succeeded or failed
        uses: re-actors/alls-green@v1.2.2
        with:
          jobs: ${{ toJSON(needs) }}
